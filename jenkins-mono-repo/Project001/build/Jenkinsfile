    pipeline {
    agent any
    stages{
        stage('This is Project001'){
            when{
                beforeAgent true
                anyOf{
                    //triggeredBy user //this did not work to indentify user launched builds
                    triggeredBy cause: 'UserIdCause'
                    changeset "**/jenkins-mono-repo/Project001/**"
                }
            }
            stages {
                stage('Build') {
                    steps {
                        echo 'Building project 001 with nested stages..'
                    }
                }
                stage('Test') {
                    //Remember changeset only sees the last change in that branch
                    //therefore the following will not get kicked off in consecutive manual builds
                    // when{
                    //     changeset "**/jenkins-mono-repo/Project001/**"
                    //     beforeAgent true
                    // }
                    steps {
                        echo 'Testing project 001..'
                    }
                }
                stage('Deploy') {
                    //Remember changeset only sees the last change in that branch
                    //therefore the following will not get kicked off in consecutive manual builds
                    // when{
                    //     changeset "**/jenkins-mono-repo/Project001/**"
                    //     beforeAgent true
                    // }
                    steps {
                        echo 'Deploying project 001....'
                    }
                }
            }
        }
    }
    post {
    success {
        // One or more steps need to be included within each condition's block.
        echo 'Inside post-success'
        //githubPRStatusPublisher buildMessage: message(failureMsg: githubPRMessage('Can\'t set status; build failed.'), successMsg: githubPRMessage('Can\'t set status; build succeeded.')), statusMsg: githubPRMessage('${GITHUB_PR_COND_REF} run ended'), unstableAs: 'SUCCESS'
        //trying with the following
        //githubPRStatusPublisher buildMessage: message(failureMsg: githubPRMessage('Can\'t set status; build failed.'), successMsg: githubPRMessage('Can\'t set status; build succeeded.')), errorHandler: statusOnPublisherError('UNSTABLE'), statusMsg: githubPRMessage('${GITHUB_PR_COND_REF} run ended'), statusVerifier: allowRunOnStatus('SUCCESS'), unstableAs: 'FAILURE'
        //the above did not work ,java.lang.NullPointerException 
    	//  at org.jenkinsci.plugins.github.pullrequest.publishers.impl.GitHubPRBuildStatusPublisher.perform(GitHubPRBuildStatusPublisher.java:95)

        }
    }

}
